#!/usr/bin/env node

'use strict'

const childProcess = require('child_process');
const fs = require('fs');
const os = require('os');
const colors = require('colors');

const urlBase = 'https://coveord.atlassian.net/browse/'; 

let issueNumber;
let branchName = childProcess.execSync('git symbolic-ref --short HEAD', {encoding: 'utf8'});
branchName = branchName.trim();
let issueRegex = /JSUI-[\d]+/i;

let match = branchName.match(issueRegex);
if (match) {
  issueNumber = match[0].toUpperCase();
} else {
  console.log('Could not find JIRA issue in branch name'.red);
  process.exit();
}

let commitMessageFilename = process.argv[2];
let commitMessage = fs.readFileSync(commitMessageFilename, {encoding: 'utf8'});
if (!commitHasIssueNumber(commitMessage, issueNumber) && !commitHasIssue(commitMessage)) {
  fs.appendFileSync(commitMessageFilename, os.EOL + urlBase + issueNumber);
  console.log(`Appended ${urlBase}${issueNumber} to commit message`.green);
} else if (!commitHasIssueNumber(commitMessage, issueNumber) && commitHasIssue(commitMessage)){
  console.log('Oops... Branch name and issue in commit message don\'t match'.red);
}

function commitHasIssue(commitMessage) {
  let urlIssueRegex = new RegExp(urlBase + issueRegex.source);
  return commitMessage.search(urlIssueRegex) != -1;
}

function commitHasIssueNumber(commitMessage, issueNumber) {
  return commitMessage.indexOf(urlBase + issueNumber) != -1;
}

